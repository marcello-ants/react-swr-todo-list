{"ast":null,"code":"var _jsxFileName = \"/Users/marcelloantunes/workspaces/tests/react-swr-todos/src/TodoApp.js\";\nimport React from \"react\";\nimport useSWR from \"swr\"; // const todosEndpoint = \"http://localhost:3001/todos\";\n\nconst todosEndpoint = \"https://jsonplaceholder.typicode.com/todos\";\n\nconst getTodo = async id => {\n  const response = await fetch(`${todosEndpoint}/${id}`);\n  return await response.json();\n};\n\nconst updateTodo = async (id, todo) => {\n  const response = await fetch(`${todosEndpoint}/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    },\n    body: JSON.stringify(todo)\n  });\n  return await response.json();\n};\n\nconst TodoApp = () => {\n  const todoId = 1;\n  const key = `${todosEndpoint}/${todoId}`;\n  const {\n    data: todo,\n    mutate\n  } = useSWR(key, () => getTodo(todoId));\n\n  const toggleCompleted = async () => {\n    const newTodo = { ...todo,\n      completed: !todo.completed\n    };\n    await updateTodo(todoId, newTodo);\n    mutate(newTodo);\n  };\n\n  if (!todo) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, todo.title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"completed\",\n    name: \"completed\",\n    value: \"completed\",\n    checked: todo.completed,\n    onChange: toggleCompleted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Completed\")));\n};\n\nexport default TodoApp;","map":{"version":3,"sources":["/Users/marcelloantunes/workspaces/tests/react-swr-todos/src/TodoApp.js"],"names":["React","useSWR","todosEndpoint","getTodo","id","response","fetch","json","updateTodo","todo","method","headers","body","JSON","stringify","TodoApp","todoId","key","data","mutate","toggleCompleted","newTodo","completed","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB,C,CAEA;;AACA,MAAMC,aAAa,GAAG,4CAAtB;;AAEA,MAAMC,OAAO,GAAG,MAAOC,EAAP,IAAc;AAC5B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,aAAc,IAAGE,EAAG,EAAxB,CAA5B;AACA,SAAO,MAAMC,QAAQ,CAACE,IAAT,EAAb;AACD,CAHD;;AAKA,MAAMC,UAAU,GAAG,OAAOJ,EAAP,EAAWK,IAAX,KAAoB;AACrC,QAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,aAAc,IAAGE,EAAG,EAAxB,EAA2B;AACrDM,IAAAA,MAAM,EAAE,KAD6C;AAErDC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAF4C;AAKrDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAL+C,GAA3B,CAA5B;AAOA,SAAO,MAAMJ,QAAQ,CAACE,IAAT,EAAb;AACD,CATD;;AAWA,MAAMQ,OAAO,GAAG,MAAM;AACpB,QAAMC,MAAM,GAAG,CAAf;AACA,QAAMC,GAAG,GAAI,GAAEf,aAAc,IAAGc,MAAO,EAAvC;AAEA,QAAM;AAAEE,IAAAA,IAAI,EAAET,IAAR;AAAcU,IAAAA;AAAd,MAAyBlB,MAAM,CAACgB,GAAD,EAAM,MAAMd,OAAO,CAACa,MAAD,CAAnB,CAArC;;AAEA,QAAMI,eAAe,GAAG,YAAY;AAClC,UAAMC,OAAO,GAAG,EACd,GAAGZ,IADW;AAEda,MAAAA,SAAS,EAAE,CAACb,IAAI,CAACa;AAFH,KAAhB;AAIA,UAAMd,UAAU,CAACQ,MAAD,EAASK,OAAT,CAAhB;AACAF,IAAAA,MAAM,CAACE,OAAD,CAAN;AACD,GAPD;;AASA,MAAI,CAACZ,IAAL,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAI,CAACc,KAAT,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,EAAE,EAAC,WAFL;AAGE,IAAA,IAAI,EAAC,WAHP;AAIE,IAAA,KAAK,EAAC,WAJR;AAKE,IAAA,OAAO,EAAEd,IAAI,CAACa,SALhB;AAME,IAAA,QAAQ,EAAEF,eANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF,CAFF,CADF;AAgBD,CAnCD;;AAqCA,eAAeL,OAAf","sourcesContent":["import React from \"react\";\nimport useSWR from \"swr\";\n\n// const todosEndpoint = \"http://localhost:3001/todos\";\nconst todosEndpoint = \"https://jsonplaceholder.typicode.com/todos\";\n\nconst getTodo = async (id) => {\n  const response = await fetch(`${todosEndpoint}/${id}`);\n  return await response.json();\n};\n\nconst updateTodo = async (id, todo) => {\n  const response = await fetch(`${todosEndpoint}/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n    },\n    body: JSON.stringify(todo),\n  });\n  return await response.json();\n};\n\nconst TodoApp = () => {\n  const todoId = 1;\n  const key = `${todosEndpoint}/${todoId}`;\n\n  const { data: todo, mutate } = useSWR(key, () => getTodo(todoId));\n\n  const toggleCompleted = async () => {\n    const newTodo = {\n      ...todo,\n      completed: !todo.completed,\n    };\n    await updateTodo(todoId, newTodo);\n    mutate(newTodo);\n  };\n\n  if (!todo) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <p>{todo.title}</p>\n      <div>\n        <input\n          type=\"checkbox\"\n          id=\"completed\"\n          name=\"completed\"\n          value=\"completed\"\n          checked={todo.completed}\n          onChange={toggleCompleted}\n        />\n        <label htmlFor=\"completed\">Completed</label>\n      </div>\n    </>\n  );\n};\n\nexport default TodoApp;\n"]},"metadata":{},"sourceType":"module"}