{"ast":null,"code":"var _jsxFileName = \"/Users/marcelloantunes/workspaces/tests/react-swr-todos/src/TodoApp.js\";\nimport React from \"react\";\nimport useSWR from \"swr\"; // const todosEndpoint = \"http://localhost:3001/todos\";\n\nconst todosEndpoint = \"https://jsonplaceholder.typicode.com/todos\";\n\nconst getData = async () => {\n  const response = await fetch(todosEndpoint);\n  return await response.json();\n};\n\nconst TodoApp = () => {\n  const {\n    data: todos\n  } = useSWR(todosEndpoint, getData);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, todos && todos.map(todo => /*#__PURE__*/React.createElement(\"div\", {\n    key: todo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 37\n    }\n  }, todo.title)));\n};\n\nexport default TodoApp;","map":{"version":3,"sources":["/Users/marcelloantunes/workspaces/tests/react-swr-todos/src/TodoApp.js"],"names":["React","useSWR","todosEndpoint","getData","response","fetch","json","TodoApp","data","todos","map","todo","id","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB,C,CAEA;;AACA,MAAMC,aAAa,GAAG,4CAAtB;;AAEA,MAAMC,OAAO,GAAG,YAAY;AAC1B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,aAAD,CAA5B;AACA,SAAO,MAAME,QAAQ,CAACE,IAAT,EAAb;AACD,CAHD;;AAKA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAkBR,MAAM,CAACC,aAAD,EAAgBC,OAAhB,CAA9B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAWC,IAAD,iBAAU;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBD,IAAI,CAACE,KAAzB,CAApB,CADZ,CADF;AAKD,CARD;;AAUA,eAAeN,OAAf","sourcesContent":["import React from \"react\";\nimport useSWR from \"swr\";\n\n// const todosEndpoint = \"http://localhost:3001/todos\";\nconst todosEndpoint = \"https://jsonplaceholder.typicode.com/todos\";\n\nconst getData = async () => {\n  const response = await fetch(todosEndpoint);\n  return await response.json();\n};\n\nconst TodoApp = () => {\n  const { data: todos } = useSWR(todosEndpoint, getData);\n\n  return (\n    <div className=\"App\">\n      {todos && todos.map((todo) => <div key={todo.id}>{todo.title}</div>)}\n    </div>\n  );\n};\n\nexport default TodoApp;\n"]},"metadata":{},"sourceType":"module"}